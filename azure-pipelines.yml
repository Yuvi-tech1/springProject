trigger:
  branches:
    include:
      - main  # Specify the branch to trigger the pipeline

pool:
  name: Default
stages:
 
  - stage: 'BuildArtifact'
    displayName: 'Building Artifact'
    jobs:
      - job: 'BuildArtifact'
        displayName: 'Build Artifact'
        steps:
        - task: Maven@4
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean package'
            options: '--no-transfer-progress'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(agent.builddirectory)/s/target'
            Contents: '*.jar'
            TargetFolder: '$(build.artifactstagingdirectory)'
            CleanTargetFolder: true
            OverWrite: true

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
  - stage: 'Dockerize'
    displayName: 'Dockerizing '
    jobs:
      - job: 'CreateDockerImage'
        displayName: 'Build and publish Docker Image'
        steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop'
            downloadPath: '.'
        - task: CopyFiles@2
          inputs:
            SourceFolder: 'drop'
            Contents: '*.jar'
            TargetFolder: '$(build.artifactstagingdirectory)/s/cicd/drop'
            
        - task: Docker@2
          inputs:
            containerRegistry: 'dockerhub'
            repository: 'yuvisha/azuredevopsdemo'
            command: 'buildAndPush'
            Dockerfile: '$(build.artifactstagingdirectory)/1/s/cicd/docker/Dockerfile'

      
    

      
     
    

    
      
    